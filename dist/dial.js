(()=>{var e={1:e=>{e.exports="varying vec2 vUv;\nuniform sampler2D uMap;\n\nvoid main() {\n    vec2 uv = vec2(vUv.x, vUv.y);\n    gl_FragColor = texture2D(uMap, uv);\n}\n"},109:e=>{e.exports="varying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n"}},t={};function r(n){if(t[n])return t[n].exports;var a=t[n]={exports:{}};return e[n](a,a.exports,r),a.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=r(109),t=r.n(e),n=r(1),a=r.n(n);AFRAME.registerComponent("dial",{schema:{src:{type:"map"},thetaStart:{default:"45"},thetaEnd:{default:"270"},color:{type:"color",default:"white"}},init:function(e){var t;this.initGeometry(),this.initShader(this.data),t=new THREE.Mesh(this.geometry,this.shader),this.el.setObject3D("mesh",t)},initGeometry:function(){var e=this.geometry=new THREE.BufferGeometry,t=.4,r=[-.4,-.4,0,t,-.4,0,-.4,t,0,t,t,0];e.setIndex([3,2,0,0,1,3]),e.setAttribute("position",new THREE.Float32BufferAttribute(r,3)),e.setAttribute("uv",new THREE.Float32BufferAttribute([0,0,1,0,0,1,1,1],2))},update:function(e){},initShader:function(e){var r=this.shader=new THREE.ShaderMaterial({uniforms:{uMap:{type:"t",value:null}},vertexShader:t(),fragmentShader:a()});(new THREE.TextureLoader).load(e.src.currentSrc,(function(e){r.uniforms.uMap.value=e,e.wrapS=e.wrapT=THREE.ClampToEdgeWrapping,e.magFilfer=THREE.LinearFilter}))}})})()})();